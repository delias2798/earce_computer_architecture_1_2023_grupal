# Reading C:/intelFPGA_lite/18.1/modelsim_ase/tcl/vsim/pref.tcl
# do TOP_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA_lite/18.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/RegisterFile.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:28 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/RegisterFile.sv 
# -- Compiling module RegisterFile
# 
# Top level modules:
# 	RegisterFile
# End time: 18:15:28 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/ExtendImmediate.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/ExtendImmediate.sv 
# -- Compiling module ExtendImmediate
# 
# Top level modules:
# 	ExtendImmediate
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/decode.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/decode.sv 
# -- Compiling module decode
# 
# Top level modules:
# 	decode
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/ControlUnit.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/decode-stage/ControlUnit.sv 
# -- Compiling module ControlUnit
# 
# Top level modules:
# 	ControlUnit
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/execute.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/execute.sv 
# -- Compiling module execute
# 
# Top level modules:
# 	execute
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ConditionCheck.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ConditionCheck.sv 
# -- Compiling module ConditionCheck
# 
# Top level modules:
# 	ConditionCheck
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ConditionalUnit.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ConditionalUnit.sv 
# -- Compiling module ConditionalUnit
# 
# Top level modules:
# 	ConditionalUnit
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ALU.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/execute-stage/ALU.sv 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/fetch-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/fetch-stage/fetch.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/fetch-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/fetch-stage/fetch.sv 
# -- Compiling module fetch
# 
# Top level modules:
# 	fetch
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/hazards {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/hazards/HazardUnit.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/hazards" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/hazards/HazardUnit.sv 
# -- Compiling module HazardUnit
# 
# Top level modules:
# 	HazardUnit
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory/InstructionMemory.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory/InstructionMemory.sv 
# -- Compiling module InstructionMemory
# 
# Top level modules:
# 	InstructionMemory
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory/DataMemory.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/memory/DataMemory.sv 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 18:15:29 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/mux3to1.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:29 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/mux3to1.sv 
# -- Compiling module mux3to1
# 
# Top level modules:
# 	mux3to1
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/mux2to1.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/mux2to1.sv 
# -- Compiling module mux2to1
# 
# Top level modules:
# 	mux2to1
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/flopenrc.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/flopenrc.sv 
# -- Compiling module flopenrc
# 
# Top level modules:
# 	flopenrc
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/adder.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/utils/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/write-back-stage {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/write-back-stage/WriteBack.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/write-back-stage" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/write-back-stage/WriteBack.sv 
# -- Compiling module WriteBack
# 
# Top level modules:
# 	WriteBack
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/TOP.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/TOP.sv 
# -- Compiling module TOP
# 
# Top level modules:
# 	TOP
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/Tessia.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/Tessia.sv 
# -- Compiling module Tessia
# 
# Top level modules:
# 	Tessia
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -sv -work work +incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches {C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches/testbench.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:15:30 on May 14,2023
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches" C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches/testbench.sv 
# -- Compiling module testbench
# 
# Top level modules:
# 	testbench
# End time: 18:15:30 on May 14,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  testbench
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" testbench 
# Start time: 18:15:30 on May 14,2023
# Loading sv_std.std
# Loading work.testbench
# Loading work.TOP
# Loading work.Tessia
# Loading work.InstructionMemory
# Loading work.fetch
# Loading work.mux2to1
# Loading work.flopenrc
# Loading work.adder
# Loading work.ControlUnit
# Loading work.decode
# Loading work.RegisterFile
# Loading work.ExtendImmediate
# Loading work.ConditionalUnit
# Loading work.ConditionCheck
# Loading work.mux3to1
# Loading work.HazardUnit
# Loading work.execute
# Loading work.ALU
# Loading work.DataMemory
# Loading work.WriteBack
# 
# add wave *
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: kevii  Hostname: ACEVEDO-001-PRI  ProcessID: 25388
#           Attempting to use alternate WLF file "./wlftzvfvxs".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftzvfvxs
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0001, SrcA:          4, SrcB:          4, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write:  0, Value:          0}
# Execute {Operation: 0001, SrcA:          8, SrcB:          8, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write:  0, Value:          0}
# Execute {Operation: 0110, SrcA:          0, SrcB:         10, ALUResult:         10, ALUFlagsE0: 0000 ALUFlagsE: 0100, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write:  0, Value:          0}
# Execute {Operation: 0110, SrcA:          0, SrcB:          1, ALUResult:          1, ALUFlagsE0: 0000 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write: 10, Value:         10}
# Execute {Operation: 0001, SrcA:         10, SrcB:          1, ALUResult:          9, ALUFlagsE0: 0000 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write:  1, Value:          1}
# Execute {Operation: 0000, SrcA:         24, SrcB:          8, ALUResult:         32, ALUFlagsE0: 0000 ALUFlagsE: 0000, BranchTaken: 1}
# 
#  
# 
# Execute {Operation: 0000, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          1, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0000, SrcA:          1, SrcB:          0, ALUResult:          1, ALUFlagsE0: 0000 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Decode {Reg to Write:  3, Value:          0}
# Execute {Operation: 0000, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: 0010, SrcA:          0, SrcB:          0, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0000, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# Execute {Operation: xxxx, SrcA:          x, SrcB:          x, ALUResult:          0, ALUFlagsE0: 0100 ALUFlagsE: 0x00, BranchTaken: 0}
# 
#  
# 
# ** Note: $stop    : C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches/testbench.sv(57)
#    Time: 2001 ps  Iteration: 0  Instance: /testbench
# Break in Module testbench at C:/Users/kevii/OneDrive/Escritorio/GitHub/earce_computer_architecture_1_2023_grupal/TessiaX/testbenches/testbench.sv line 57
# A time value could not be extracted from the current line
# End time: 18:17:27 on May 14,2023, Elapsed time: 0:01:57
# Errors: 0, Warnings: 2
